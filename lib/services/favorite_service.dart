import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';

class FavoriteService {
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  final FirebaseAuth _auth = FirebaseAuth.instance;

  // –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  String? get _userId => _auth.currentUser?.uid;

  /// ‚úÖ –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Å–Ω—é –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  Future<void> addToFavorites(String songId, Map<String, dynamic> songData) async {
    if (_userId == null) return;
    await _firestore
        .collection('users')
        .doc(_userId)
        .collection('favorites')
        .doc(songId)
        .set(songData);
  }

  /// ‚ùå –£–¥–∞–ª–∏—Ç—å –ø–µ—Å–Ω—é –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  Future<void> removeFromFavorites(String songId) async {
    if (_userId == null) return;
    await _firestore
        .collection('users')
        .doc(_userId)
        .collection('favorites')
        .doc(songId)
        .delete();
  }

  /// üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–µ—Å–Ω—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
  Future<bool> isFavorite(String songId) async {
    if (_userId == null) return false;
    var doc = await _firestore
        .collection('users')
        .doc(_userId)
        .collection('favorites')
        .doc(songId)
        .get();
    return doc.exists;
  }
Stream<List<Map<String, dynamic>>> getFavoriteTracksStream() {
  if (_userId == null) {
    print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
    return const Stream.empty();
  }

  return _firestore
      .collection('users')
      .doc(_userId)
      .collection('favorites')
      .snapshots()
      .map((snapshot) {
    print("üî• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ Firestore: ${snapshot.docs.length} –∑–∞–ø–∏—Å–µ–π");

    return snapshot.docs.map((doc) {
      final data = doc.data(); // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
      print("üéµ –¢—Ä–µ–∫: ${data['title']} - ${data['artist']}");

      return {
        'id': data.containsKey('id') ? data['id'] : doc.id,
        'title': data.containsKey('title') ? data['title'] : '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
        'artist': data.containsKey('artist') ? data['artist'] : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å',
        'image_url': data.containsKey('image_url') ? data['image_url'] : '',
        'track_url': data.containsKey('track_url') ? data['track_url'] : '',
      };
    }).toList();
  });
}


}
